using UnityEngine;

using TMPro;
using System.Collections;
using UnityEngine;

public class TimeManager : MonoBehaviour
{
    public TMP_Text timeText;
    private int hour = 19; // 7 PM
    private int minute = 0;
     public CanvasGroup fadePanel;  
    public float fadeDuration = 1f;

    void Start()
    {
        UpdateTimeDisplay();
        fadePanel.alpha = 0;  // Start with the fade panel hidden

    }

    public void AddTime(int minutesToAdd)
    {
        minute += minutesToAdd;
        while (minute >= 60)
        {
            minute -= 60;
            hour += 1;
        }
        while (hour >= 24) 
        {
            hour -= 24;
        }
        
        // Trigger the fade effect coroutine
        StartCoroutine(FadeInOut());
        StartCoroutine(DelayedUpdateTimeDisplay());
    }

    void UpdateTimeDisplay()
    {
        string suffix = hour >= 12 ? "PM" : "AM";
        int displayHour = hour % 12;
        if (displayHour == 0) displayHour = 12;

        timeText.text = displayHour.ToString("0") + ":" + minute.ToString("00") + " " + suffix;
    }


    // Coroutines Generated by ChatGPT
    private IEnumerator DelayedUpdateTimeDisplay()
    {
        // Wait for 1 second before updating the time display
        yield return new WaitForSeconds(1f);
        UpdateTimeDisplay();
    }

     private IEnumerator FadeInOut()
    {
        // Fade In
        fadePanel.alpha = 0;
        fadePanel.gameObject.SetActive(true);  // Ensure the fade panel is active
        float timeElapsed = 0;
        while (timeElapsed < fadeDuration)
        {
            fadePanel.alpha = Mathf.Lerp(0, 1, timeElapsed / fadeDuration);
            timeElapsed += Time.deltaTime;
            yield return null;
        }
        fadePanel.alpha = 1;

        // Wait for a brief moment before fading out
        yield return new WaitForSeconds(0.5f);

        // Fade Out
        timeElapsed = 0;
        while (timeElapsed < fadeDuration)
        {
            fadePanel.alpha = Mathf.Lerp(1, 0, timeElapsed / fadeDuration);
            timeElapsed += Time.deltaTime;
            yield return null;
        }
        fadePanel.alpha = 0;
        fadePanel.gameObject.SetActive(false);  // Hide the fade panel after the animation
    }
}

