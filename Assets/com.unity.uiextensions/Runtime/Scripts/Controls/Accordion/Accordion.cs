///Credit ChoMPHi
///Sourced from - http://forum.unity3d.com/threads/accordion-type-layout.271818/
using System.Linq; 
using System.Collections;

namespace UnityEngine.UI.Extensions
{
    [RequireComponent(typeof(HorizontalOrVerticalLayoutGroup), typeof(ContentSizeFitter), typeof(ToggleGroup))]
	[AddComponentMenu("UI/Extensions/Accordion/Accordion Group")]
	public class Accordion : MonoBehaviour
	{
		private bool m_expandVertical = true;
		[HideInInspector]
		public bool ExpandVerticval => m_expandVertical;

		public enum Transition
		{
			Instant,
			Tween
		}
		
		[SerializeField] private Transition m_Transition = Transition.Instant;
		[SerializeField] private float m_TransitionDuration = 0.3f;
		
		/// <summary>
		/// Gets or sets the transition.
		/// </summary>
		/// <value>The transition.</value>
		public Transition transition
		{
			get { return this.m_Transition; }
			set { this.m_Transition = value; }
		}
		
		/// <summary>
		/// Gets or sets the duration of the transition.
		/// </summary>
		/// <value>The duration of the transition.</value>
		public float transitionDuration
		{
			get { return this.m_TransitionDuration; }
			set { this.m_TransitionDuration = value; }
		}

        private void Awake()
        {
			m_expandVertical = GetComponent<HorizontalLayoutGroup>() ? false : true;
			var group = GetComponent<ToggleGroup>();
		}


		// Generated by ChatGPT
		private void Start()
				{
					// Get all Toggles in this group
					Toggle[] toggles = GetComponentsInChildren<Toggle>(true);

					foreach (Toggle toggle in toggles)
					{
						// Find the AssignmentSelectButton under the current toggle's parent tab (recursively search all children)
						Transform assignmentButton = toggle.GetComponentsInChildren<Transform>(true)
															.FirstOrDefault(t => t.name == "AssignmentSelectButton");

						if (assignmentButton != null)
						{
							// Initially hide the button
							assignmentButton.gameObject.SetActive(false);

							// Add a listener to toggle visibility when the toggle is clicked
							toggle.onValueChanged.AddListener((isOn) =>
							{
								// Start the coroutine to delay visibility for each button individually
								if (isOn)
								{
									StartCoroutine(ShowButtonWithDelay(assignmentButton.gameObject));
								}
								else
								{
									// Hide immediately when toggled off
									assignmentButton.gameObject.SetActive(false);
								}
							});
						}
						else
						{
							Debug.LogWarning($"AssignmentSelectButton not found under {toggle.name}");
						}
					}
				}

		// Generated by ChatGPT
        private IEnumerator ShowButtonWithDelay(GameObject assignmentButton)
        {
            // Wait for 0.3 seconds before making the button visible
            yield return new WaitForSeconds(0.3f);

            // Make the AssignmentSelectButton visible
            assignmentButton.SetActive(true);
        }


#if UNITY_EDITOR

        private void OnValidate()
        {
            if (!GetComponent<HorizontalLayoutGroup>() && !GetComponent<VerticalLayoutGroup>())
            {
				Debug.LogError("Accordion requires either a Horizontal or Vertical Layout group to place children");
            }
        }
#endif
	}
}